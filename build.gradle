plugins {
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.0.0'
}

group = 'com.tars'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    set('springCloudVersion', '2023.0.1')
}

// 전역적으로 Sleuth 관련 의존성 제외 (모든 의존성 범위에 적용)
configurations {
    all {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-sleuth'
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-sleuth-zipkin'
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-sleuth-brave'
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-sleuth-core'
        
        // 의존성 해결 전략 설정
        resolutionStrategy {
            // 강제로 Spring Cloud Sleuth 의존성을 최신 Micrometer Tracing으로 대체
            force 'io.micrometer:micrometer-tracing:1.2.3'
            force 'io.micrometer:micrometer-tracing-bridge-brave:1.2.3'
            
            // Spring Cloud Sleuth 의존성을 찾으면 대체
            eachDependency { details ->
                if (details.requested.group == 'org.springframework.cloud' && 
                   (details.requested.name.contains('sleuth') || details.requested.name.contains('zipkin'))) {
                    details.useTarget "io.micrometer:micrometer-tracing:1.2.3"
                }
            }
        }
    }
}

dependencies {
    // Spring Cloud Gateway - 명시적으로 제외
    implementation('org.springframework.cloud:spring-cloud-starter-gateway')
    
    // Micrometer Tracing (Spring Cloud Sleuth 대체)
    implementation 'io.micrometer:micrometer-tracing:1.2.3'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave:1.2.3'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave:3.3.0'
    
    // Spring Boot Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Kotlin
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    // JWT 관련 의존성 - updated to newest version
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // Reactive Redis (토큰 블랙리스트 관리)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test:3.7.3'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.1'
    
    // MockK 관련 의존성
    testImplementation 'io.mockk:mockk:1.13.17'

    // Kotest 관련 의존성
    testImplementation 'io.kotest:kotest-runner-junit5:5.9.1'
    testImplementation 'io.kotest:kotest-assertions-core:5.9.1'
    testImplementation 'io.kotest:kotest-property:5.9.1'
    testImplementation 'io.kotest:kotest-framework-datatest:5.9.1'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '21'
    }
}

tasks.named('test') {
    useJUnitPlatform()
} 